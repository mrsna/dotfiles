#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return



autoload -U promptinit; promptinit; 
autoload -U compinit bashcompinit
compinit
bashcompinit
zstyle ':completion:*' menu yes select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true

autoload -U select-word-style
select-word-style bash

setopt auto_cd
setopt HIST_IGNORE_SPACE
setopt interactive_comments
setopt inc_append_history
setopt share_history
setopt AUTO_PUSHD          
setopt PUSHD_IGNORE_DUPS    
setopt PUSHD_SILENT 


alias ls='ls --color=auto'
alias ll='ls -larth --color=auto'
alias vi='vim'
alias grep='grep --color=auto'
PS1='[\u@\h \W]\$ '


export EDITOR="vim"


function imgcat()
{
  local CNT=0
  local IFS=$'\n'
  local posY=$(($(echo -e "cols" | tput -S) / 2))
  local posX=$(($(echo -e "lines" | tput -S) / 4))

  for i in $(find $1 -type f -exec file --mime-type {} \+ | awk -F: '{if ($2 ~/image\//) print $1}'); do
    CNT=$((CNT+1))
    if test $(($CNT % 2)) -eq 0 && test "$2" != "-1"; then
      printf "\033[${posX}A"
      printf "\033[${posY}C"
      echo -e "==== $(basename $i) ===="
      printf "\033[${posY}C"
    else
      echo -e "==== $(basename $i) ===="
    fi

    if echo "$i" | grep -e ".svg$" &> /dev/null; then
      ffmpeg -i "$i" -vf scale=640:-1 -f image2pipe -vcodec png - 2> /dev/null | wezterm imgcat --height 20%
    else
      wezterm imgcat --height 20% "$i";
    fi
  done
}

function fixvmware() {
  sudo systemctl restart docker
  virsh --connect qemu:///system net-destroy default
  virsh --connect qemu:///system net-start --network default
}

source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


